---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: orchestrator
  labels:
    name: orchestrator
    cleanup: "{{.Release.Namespace}}-{{.Chart.Name}}-services"
spec:
  replicas: {{.Values.replicas}}
  selector:
        matchLabels:
          name: orchestrator
  template:
    metadata:
      labels:
        name: orchestrator
        cleanup: "{{.Release.Namespace}}-{{.Chart.Name}}-services"
      annotations:
        prometheus.io/scrape: "true"
    spec:
      restartPolicy: Always
      dnsPolicy: ClusterFirst

      containers:
      - name: orchestrator
        image: {{.Values.repo}}/orchestrator-service:{{.Values.version}}{{.Values.tagSufix}}
        imagePullPolicy: Always
        ports:
        - containerPort: 8015
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /actuator/health
            scheme: HTTP
            port: 8015
          initialDelaySeconds: 40
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /actuator/health
            scheme: HTTP
            port: 8015
          initialDelaySeconds: 35
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 5
        env:
        - name: CONSUL_HOST
          value: "{{.Values.consul.server}}"
        - name: CONSUL_PORT
          value: "{{.Values.consul.port}}"
        - name: KAFKA_BOOTSTRAP_URL
          value: "{{.Values.kafka.bootstrap}}:{{.Values.kafka.port}}"
        - name: ZIPKIN_URL
          value: "{{.Values.zipkin.schema}}://{{.Values.zipkin.ip}}:{{.Values.zipkin.port}}"
        - name: REDIS_HOST
          value: "{{.Values.redis.ip}}"
        - name: REDIS_PORT
          value: "{{.Values.redis.port}}"
        - name: REDIS_SENTINEL_MASTER
          value: "{{.Values.redis.sentinel}}"
        - name: REDIS_SENTINEL_NODES
          value: "{{.Values.redis.nodes}}" 
        - name: SENTRY_DSN
          value: "{{.Values.sentry.dsn}}"
        - name: SENTRY_ENVIRONMENT
          value: "{{.Values.sentry.environment}}"
        - name: SENTRY_RELEASE
          value: "{{.Values.version}}"  
                            
        volumeMounts:
        - mountPath: "{{.Values.file.path}}"
          name: load-data  
      volumes:
      - name: load-data
        persistentVolumeClaim:
            claimName: reportnet3-data


  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
