kind: Deployment
apiVersion: apps/v1beta1
metadata:
  name: recordstore
  labels:
    name: recordstore
    cleanup: "{{.Release.Namespace}}-{{.Chart.Name}}-services"
spec:
  replicas: {{.Values.replicas}}
  template:
    metadata:
      labels:
        name: recordstore
        cleanup: "{{.Release.Namespace}}-{{.Chart.Name}}-services"
    spec:
      containers:
      - name: recordstore
        image: {{.Values.repo}}/recordstore-service:3.0{{.Values.tagSufix}}
        imagePullPolicy: Always
        ports:
        - containerPort: 8090
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 8090
          initialDelaySeconds: 20
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 8090
          initialDelaySeconds: 15
          periodSeconds: 20
        env:
        - name: CONSUL_HOST
          value: "{{.Values.consul.server}}"
        - name: CONSUL_PORT
          value: "{{.Values.consul.port}}"
        - name: KAFKA_BOOTSTRAP_URL
          value: "{{.Values.kafka.bootstrap}}:{{.Values.kafka.port}}"
        - name: RECORDSTORE_IP
          value: "{{.Values.postgres.ip}}"
        - name: RECORDSTORE_CONNECTION_STRING
          value: "{{.Values.postgres.url}}"
        - name: RECORDSTORE_USERNAME
          value: "{{.Values.postgres.user}}"
        - name: RECORDSTORE_PASSWORD
          value: "{{.Values.postgres.password}}"
        - name: METABASE_CONNECTION_USER
          value: "{{.Values.postgres.user}}"
        - name: METABASE_CONNECTION_PASSWORD
          value: "{{.Values.postgres.password}}"
        - name: METABASE_CONNECTION_URL
          value: "{{.Values.postgres.metabase.url}}"
        - name: ZIPKIN_URL
          value: "http://{{.Values.zipkin.ip}}:{{.Values.zipkin.port}}"
        - name: REDIS_HOST
          value: "{{.Values.redis.ip}}"
        - name: REDIS_PORT
          value: "{{.Values.redis.port}}"

        volumeMounts:
        - mountPath: "/reportnet3-data/snapshots"
          name: snapshots-data  
      volumes:
      - name: snapshots-data
        persistentVolumeClaim:
            claimName: reportnet3-data
      restartPolicy: Always
      dnsPolicy: ClusterFirst

            
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
