kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: document
  labels:
    name: document
    cleanup: "{{.Release.Namespace}}-{{.Chart.Name}}-services"
spec:
  replicas: {{.Values.replicas}}
  template:
    metadata:
      labels:
        name: document
        cleanup: "{{.Release.Namespace}}-{{.Chart.Name}}-services"
    spec:
      containers:
      - name: document
        image: {{.Values.repo}}/document-container-service:3.0{{.Values.tagSufix}}
        imagePullPolicy: Always
        ports:
        - containerPort: 9040
          protocol: TCP
        readinessProbe:
          tcpSocket:
            port: 9040
          initialDelaySeconds: 20
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 9040
          initialDelaySeconds: 15
          periodSeconds: 20
        env:
        - name: CONSUL_HOST
          value: "{{.Values.consul.server}}"
        - name: CONSUL_PORT
          value: "{{.Values.consul.port}}"
        - name: KAFKA_BOOTSTRAP_URL
          value: "{{.Values.kafka.bootstrap}}:{{.Values.kafka.port}}"
        - name: MONGO_DB_HOST
          value: "{{.Values.mongo.host}}"
        - name: MONGO_DB_PORT
          value: "{{.Values.mongo.port}}"
        - name: ZIPKIN_URL
          value: "http://{{.Values.zipkin.ip}}:{{.Values.zipkin.port}}"
        - name: REDIS_HOST
          value: "{{.Values.redis.ip}}"
        - name: REDIS_PORT
          value: "{{.Values.redis.port}}"
         
      restartPolicy: Always
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
