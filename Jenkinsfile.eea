pipeline {

    agent { node { label 'kubectl' } }
    tools {
        maven 'maven3'

    }

    parameters {
			choice(choices: ['dev','test','sandbox','hotfix','prod','prod2'],description:'Select the target Environment', name: 'Env')
			gitParameter branchFilter: 'origin/(.*)', defaultValue: 'main', name: 'Brn', type: 'PT_BRANCH'
			//string(defaultValue: 'dev', description: 'Set the branch', name: 'Brn', trim: true)
			//string(defaultValue: 'v3.1.6-DEV', description: 'Set the version to be deployed', name: 'Ver', trim: true)
			//string(defaultValue: 'v3.1.6-demoArchV2', description: 'Set the version to be deployed', name: 'Ver', trim: true)
			string(defaultValue: 'v3.3-ARCHITECTURE_DATALAKES', description: 'Set the version to be deployed', name: 'Ver', trim: true)
			string(defaultValue: 'api-gateway communication dataflow dataset document frontend recordstore rod ums validation orchestrator collaboration', description: 'Set the service to down scale before deployment (api-gateway communication dataflow dataset document frontend recordstore rod ums validation orchestrator collaboration)', name: 'Reset_Services', trim: true)
			string(defaultValue: '1', description: 'Dataflow Replicas to be deployed (dev=1,test=1,staging=1,hotfix=1,production=2)', name: 'Dataflow_replicas', trim: true)
			string(defaultValue: '1', description: 'DataSet Replicas to be deployed (dev=1,test=1,staging=1,hotfix=1,production=2)', name: 'DataSet_replicas', trim: true)
			string(defaultValue: '1', description: 'Recordstore Replicas to be deployed (dev=1,test=1,staging=1,hotfix=1,production=4)', name: 'Recordstore_replicas', trim: true)
			string(defaultValue: '1', description: 'Orchestrator service Replicas to be deployed (dev=1,test=1,staging=1,hotfix=1,production=4)', name: 'Orchestrator_replicas', trim: true)
			string(defaultValue: '1', description: 'Validation Replicas to be deployed (dev=1,test=1,staging=1,hotfix=1,production=4)', name: 'Validation_replicas', trim: true)
			string(defaultValue: '1', description: 'User Management Replicas to be deployed (dev=1,test=1,staging=1,hotfix=1,production=1)', name: 'User_management_replicas', trim: true)
	}
					
    stages {
        stage('Deployment Init') {
            steps {
                sh 'echo "Starting Deployment Pipeline"'                
            }
        }
        stage('Setting Default Environmental Variables') {
			
			steps {
				script {
					env.TARGET_ENV="reportnet"
					env.REPO="eeacms"
					env.KEYCLOAK="true"
				}
			}
		}


        stage('Setting Default Environmental Variables') {
			
			steps {
				script {
					echo "Saving Secret Files into place for Env  ${params.Env}"
					//#######################################################################################################################
					//copy the secret file to destination
					withCredentials([file(credentialsId: 'applications.properties', variable: 'FILE')]) {
						//text = readFile(FILE)
						echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/application-config/files/application.properties"
						writeFile file: '$WORKSPACE/helm/eaa-deploy/application-config/files/application.properties', text: readFile(FILE)
					}			
					//println "${text}"	

					//Collaboration
					withCredentials([file(credentialsId: 'collaboration-service.properties', variable: 'FILE')]) {
						//text = readFile(FILE)
						echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties"
						writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties', text: readFile(FILE)
					}			
					//println "${text}"	

					//Communication
					withCredentials([file(credentialsId: 'communication-service.properties', variable: 'FILE')]) {
						//text = readFile(FILE)
						echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties"
						writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties', text: readFile(FILE)
					}			
					//println "${text}"	

					//Dataflow
					withCredentials([file(credentialsId: 'dataflow-service.properties', variable: 'FILE')]) {
						//text = readFile(FILE)
						echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties', text: readFile(FILE)
					}
					//println "${text}"	

					//Dataset
					withCredentials([file(credentialsId: 'dataset-service.properties', variable: 'FILE')]) {
					 	//text = readFile(FILE)
					 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties"
					 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties', text: readFile(FILE)
					}
					//println "${text}"	

					// //Document document-service.properties 
					// withCredentials([file(credentialsId: 'document-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //reportnet-e2e 
					// withCredentials([file(credentialsId: 'e2e_application.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-e2e/preconfig/files/application.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-e2e/preconfig/files/application.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //Indexsearch
					// withCredentials([file(credentialsId: 'indexsearch-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-indexsearch/preconfig/files/indexsearch-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-indexsearch/preconfig/files/indexsearch-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //Orchestrator
					// withCredentials([file(credentialsId: 'orchestrator-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties ', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //RecordStore
					// withCredentials([file(credentialsId: 'recordstore-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //Rod
					// withCredentials([file(credentialsId: 'rod-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //UMS
					// withCredentials([file(credentialsId: 'ums-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //Validation
					// withCredentials([file(credentialsId: 'validation-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	
				}
			}
		}



























//
//###################################### SETUP ENVIRONMENT VARIABLES ######################################
//

//############################## ****** DEVELOPMENT ******  ######################################
 		stage('Deploy to DEV') {
			when {				
				expression { params.Env == "dev" }
				}
            steps {
				echo "ENV: ${params.Env}"
				echo "BRANCH: ${params.Brn}"
				echo "VERSION: ${params.Ver}"
				script { 	
					echo "deploy to  ${params.Env}"
 					//Set Environment to dev
 					echo "Setting environment specific variables to ${params.Env}"
					sh 'echo "Setting Environment Variables for $Environment and Starting Deployment Pipeline "'    
					//env.TARGET_ENV="reportnet"
					env.REPORTNET_BACKEND="https://dev-api.reportnet.europa.eu"
					env.EULOGIN="https://dev-auth.reportnet.europa.eu/auth/realms/Reportnet/protocol/openid-connect/auth?client_id=reportnet\\&redirect_uri=https%3A%2F%2Fdev.reportnet.europa.eu%2Feulogin%2F&response_mode=fragment\\&response_type=code\\&scope=openid"
					env.WEB_SOCKET="wss://dev.reportnet.europa.eu/communication/reportnet-websocket"
					env.REDIRECT_URI="https://dev.reportnet.europa.eu/eulogin/"
					env.R3_CALLBACK_URL="https://dev-api.reportnet.europa.eu"
					env.FME_TOPIC="Reportnet3_Dev_Topic"
					env.ENVIRONMENT="kubectl-config-dev"
					env.SENTRY_ENV="dev"
					env.DEPLOYMENT_ENV="dev"
					env.DEPLOYMENT_BRN="${params.Brn}"
					env.DEPLOYMENT_VAR="${params.Ver}"
					env.DTAFLOWREP="${params.Dataflow_replicas}"
					env.DTASETREP="${params.DataSet_replicas}"
					env.RCDSTRREP="${params.Recordstore_replicas}"
					env.ORCHREP="${params.Orchestrator_replicas}"	
					env.VLDREP="${params.Validation_replicas}"
					env.USRMGMREP="${params.User_management_replicas}"
					

					// echo "Saving Secret Files into place for Env  ${params.Env}"
					// //#######################################################################################################################
					// //copy the secret file to destination
					// withCredentials([file(credentialsId: 'applications.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/application-config/files/application.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/application-config/files/application.properties', text: readFile(FILE)
					// }			
					// //println "${text}"	

					// //Collaboration
					// withCredentials([file(credentialsId: 'collaboration-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties', text: readFile(FILE)
					// }			
					// //println "${text}"	

					// //Communication
					// withCredentials([file(credentialsId: 'communication-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties', text: readFile(FILE)
					// }			
					// //println "${text}"	

					// //Dataflow
					// withCredentials([file(credentialsId: 'dataflow-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //Dataset
					// withCredentials([file(credentialsId: 'dataset-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //Document document-service.properties 
					// withCredentials([file(credentialsId: 'document-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //reportnet-e2e 
					// withCredentials([file(credentialsId: 'e2e_application.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-e2e/preconfig/files/application.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-e2e/preconfig/files/application.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //Indexsearch
					// withCredentials([file(credentialsId: 'indexsearch-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-indexsearch/preconfig/files/indexsearch-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-indexsearch/preconfig/files/indexsearch-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //Orchestrator
					// withCredentials([file(credentialsId: 'orchestrator-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties ', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //RecordStore
					// withCredentials([file(credentialsId: 'recordstore-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //Rod
					// withCredentials([file(credentialsId: 'rod-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //UMS
					// withCredentials([file(credentialsId: 'ums-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //Validation
					// withCredentials([file(credentialsId: 'validation-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //#######################################################################################################################



 					echo "Update Database of ${params.Env}"

					script {
					withCredentials([
						usernamePassword(credentialsId: 'd2540d35-0b65-4c30-ab4d-57b5ab0c2397',
						usernameVariable: 'username',
						passwordVariable: 'password')
					]) {
					sh 'echo "Starting $TARGET_ENV building"' 
					sh '''
						mvn -f $WORKSPACE/helm/eaa-deploy/database -DPOSTGRES_SERVER=10.50.5.14:31293 -DPOSTGRES_PASS="$password" -DPOSTGRES_USER="$username" flyway:migrate
					'''

						}
					}





					// ####################################################################################################################################################
					// LETS TRY TO SET THE CHANGE ON THE PROPERTIES STATIC FILE
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "sed -i 's/ENV:.*}/ENV:${params.Env}}/g' $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "grep -rni 'ENV:' $WORKSPACE/helm/eaa-deploy/application-config/ | xargs sed -i 's/ENV:.*}/ENV:${params.Env}}/g'"
					//sh "grep -lE 'dev-' **/*| xargs sed -in 's/myPattern/NEWTEXT/g'"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "find $WORKSPACE/helm/eaa-deploy/application-config/ -type f | xargs sed -i 's/ENV:.*}/ENV:${params.Env}}/g'"



					sh "echo ######################################################################################################################"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~APPLICATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/dev.reportnet.europa.eu/${params.Env}.reportnet.europa.eu/g' $WORKSPACE/helm/eaa-deploy/application-config/files/application.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/application-config/files/application.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~API GATEWAY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-apigateway-metrics/ELASTIC_INDEX:${params.Env}-apigateway-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-api-gateway/preconfig/files/api-gateway.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-api-gateway/preconfig/files/api-gateway.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~COLLABORATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-apigateway-metrics/ELASTIC_INDEX:${params.Env}-apigateway-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~COMMUNICATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-communication-metrics/ELASTIC_INDEX:${params.Env}-communication-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DATAFLOW~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					//sh "sed -i 's/R3_CALLBACK_URL:http://rn3sandbox-api.altia.es/R3_CALLBACK_URL:http://rn3${params.Env}-api.altia.es/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					sh "sed -i 's/ELASTIC_INDEX:dev-dataflow-metrics/ELASTIC_INDEX:${params.Env}-dataflow-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DATASET~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-dataset-metrics/ELASTIC_INDEX:${params.Env}-dataset-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DOCUMENT~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-document-metrics/ELASTIC_INDEX:${params.Env}-document-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~RECORDSTORE~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-recordstore-metrics/ELASTIC_INDEX:${params.Env}-recordstore-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ROD~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-rod-metrics/ELASTIC_INDEX:${params.Env}-rod-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~UMS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-ums-metrics/ELASTIC_INDEX:${params.Env}-ums-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~VALIDATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-validation-metrics/ELASTIC_INDEX:${params.Env}-validation-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					sh "echo ######################################################################################################################"



				}
			}
		}
//############################## ****** TEST ******  ######################################
 		stage('Deploy to TEST') {
			when {				
				expression { params.Env == "test" }
				}
            steps {
				echo "ENV: ${params.Env}"
				echo "BRANCH: ${params.Brn}"
				echo "VERSION: ${params.Ver}"
				script { 	
					echo "deploy to  ${params.Env}"
 					//Set Environment to dev
 					echo "Setting environment specific variables to ${params.Env}"
					sh 'echo "Setting Environment Variables for $Environment and Starting Deployment Pipeline"'    
					env.REPORTNET_BACKEND="https://test-api.reportnet.europa.eu"
					env.EULOGIN="https://test-auth.reportnet.europa.eu/auth/realms/Reportnet/protocol/openid-connect/auth?client_id=reportnet\\&redirect_uri=https%3A%2F%2Ftest.reportnet.europa.eu%2Feulogin%2F&response_mode=fragment\\&response_type=code\\&scope=openid"
					env.WEB_SOCKET="wss://test.reportnet.europa.eu/communication/reportnet-websocket"
					env.SENTRY_ENV="test"
					env.REDIRECT_URI="https://test.reportnet.europa.eu/eulogin/"
					env.R3_CALLBACK_URL="https://test-api.reportnet.europa.eu"
					env.FME_TOPIC="Reportnet3_Test_Topic"
					env.ENVIRONMENT="kubectl-config-test"
					env.DEPLOYMENT_ENV="test"
					env.DEPLOYMENT_BRN="${params.Brn}"
					env.DEPLOYMENT_VAR="${params.Ver}"
					env.DTAFLOWREP="${params.Dataflow_replicas}"
					env.DTASETREP="${params.DataSet_replicas}"
					env.RCDSTRREP="${params.Recordstore_replicas}"
					env.ORCHREP="${params.Orchestrator_replicas}"	
					env.VLDREP="${params.Validation_replicas}"
					env.USRMGMREP="${params.User_management_replicas}"


					// echo "Saving Secret Files into place for Env  ${params.Env}"
					// //#######################################################################################################################
					// //copy the secret file to destination
					// withCredentials([file(credentialsId: 'applications.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/application-config/files/application.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/application-config/files/application.properties', text: readFile(FILE)
					// }			
					// //println "${text}"	

					// //Collaboration
					// withCredentials([file(credentialsId: 'collaboration-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties', text: readFile(FILE)
					// }			
					// //println "${text}"	

					// //Communication
					// withCredentials([file(credentialsId: 'communication-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties', text: readFile(FILE)
					// }			
					// //println "${text}"	

					// //Dataflow
					// withCredentials([file(credentialsId: 'dataflow-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //Dataset
					// withCredentials([file(credentialsId: 'dataset-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //Document document-service.properties 
					// withCredentials([file(credentialsId: 'document-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //reportnet-e2e 
					// withCredentials([file(credentialsId: 'e2e_application.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-e2e/preconfig/files/application.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-e2e/preconfig/files/application.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //Indexsearch
					// withCredentials([file(credentialsId: 'indexsearch-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-indexsearch/preconfig/files/indexsearch-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-indexsearch/preconfig/files/indexsearch-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //Orchestrator
					// withCredentials([file(credentialsId: 'orchestrator-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties ', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //RecordStore
					// withCredentials([file(credentialsId: 'recordstore-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //Rod
					// withCredentials([file(credentialsId: 'rod-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //UMS
					// withCredentials([file(credentialsId: 'ums-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					// //Validation
					// withCredentials([file(credentialsId: 'validation-service.properties', variable: 'FILE')]) {
					// 	//text = readFile(FILE)
					// 	echo "writing properties secret file to $WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties"
					// 	writeFile file: '$WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties', text: readFile(FILE)
					// }
					// //println "${text}"	

					//#######################################################################################################################










 					echo "Update Database of ${params.Env}"

					script {
					withCredentials([
						usernamePassword(credentialsId: 'd2540d35-0b65-4c30-ab4d-57b5ab0c2397',
						usernameVariable: 'username',
						passwordVariable: 'password')
					]) {
					sh 'echo "Starting $TARGET_ENV building"' 
					sh '''
						mvn -f $WORKSPACE/helm/eaa-deploy/database -DPOSTGRES_SERVER=10.50.5.14:31293 -DPOSTGRES_PASS="$password" -DPOSTGRES_USER="$username" flyway:migrate
					'''

						}
					}



					// ####################################################################################################################################################
					// LETS TRY TO SET THE CHANGE ON THE PROPERTIES STATIC FILE
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "sed -i 's/ENV:.*}/ENV:${params.Env}}/g' $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "grep -rni 'ENV:' $WORKSPACE/helm/eaa-deploy/application-config/ | xargs sed -i 's/ENV:.*}/ENV:${params.Env}}/g'"
					//sh "grep -lE 'dev-' **/*| xargs sed -in 's/myPattern/NEWTEXT/g'"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "find $WORKSPACE/helm/eaa-deploy/application-config/ -type f | xargs sed -i 's/ENV:.*}/ENV:${params.Env}}/g'"



					sh "echo ######################################################################################################################"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~APPLICATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/dev.reportnet.europa.eu/${params.Env}.reportnet.europa.eu/g' $WORKSPACE/helm/eaa-deploy/application-config/files/application.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/application-config/files/application.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~API GATEWAY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-apigateway-metrics/ELASTIC_INDEX:${params.Env}-apigateway-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-api-gateway/preconfig/files/api-gateway.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-api-gateway/preconfig/files/api-gateway.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~COLLABORATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-apigateway-metrics/ELASTIC_INDEX:${params.Env}-apigateway-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~COMMUNICATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-communication-metrics/ELASTIC_INDEX:${params.Env}-communication-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DATAFLOW~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					//sh "sed -i 's/R3_CALLBACK_URL:http://rn3sandbox-api.altia.es/R3_CALLBACK_URL:http://rn3${params.Env}-api.altia.es/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					sh "sed -i 's/ELASTIC_INDEX:dev-dataflow-metrics/ELASTIC_INDEX:${params.Env}-dataflow-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DATASET~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-dataset-metrics/ELASTIC_INDEX:${params.Env}-dataset-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DOCUMENT~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-document-metrics/ELASTIC_INDEX:${params.Env}-document-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~RECORDSTORE~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-recordstore-metrics/ELASTIC_INDEX:${params.Env}-recordstore-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ROD~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-rod-metrics/ELASTIC_INDEX:${params.Env}-rod-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~UMS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-ums-metrics/ELASTIC_INDEX:${params.Env}-ums-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~VALIDATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-validation-metrics/ELASTIC_INDEX:${params.Env}-validation-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					sh "echo ######################################################################################################################"















				}
			}
		}
//############################## ****** STAGING  ******  ######################################	
 		stage('Deploy to SANDBOX') {
			when {				
				expression { params.Env == "sandbox" }
				}
            steps {
				echo "ENV: ${params.Env}"
				echo "BRANCH: ${params.Brn}"
				echo "VERSION: ${params.Ver}"
				script { 	
					echo "deploy to  ${params.Env}"
 					//Set Environment to dev
 					echo "Setting environment specific variables to ${params.Env}"
					sh 'echo "Setting Environment Variables for $Environment and Starting Deployment Pipeline"'    
					env.REPORTNET_BACKEND="https://sandbox-api.reportnet.europa.eu"
					env.EULOGIN="https://sandbox-auth.reportnet.europa.eu/auth/realms/Reportnet/protocol/openid-connect/auth?client_id=reportnet\\&redirect_uri=https%3A%2F%2Fsandbox.reportnet.europa.eu%2Feulogin%2F&response_mode=fragment\\&response_type=code\\&scope=openid"
					env.WEB_SOCKET="wss://sandbox.reportnet.europa.eu/communication/reportnet-websocket"
					env.SENTRY_ENV="staging"
					env.REDIRECT_URI="https://sandbox.reportnet.europa.eu/eulogin/"
					env.R3_CALLBACK_URL="https://sandbox-api.reportnet.europa.eu"
					env.FME_TOPIC="Reportnet3_Staging_Topic"
					env.ENVIRONMENT="kubectl-config-staging"
					env.DEPLOYMENT_ENV="hotfix"
					env.DEPLOYMENT_BRN="${params.Brn}"
					env.DEPLOYMENT_VAR="${params.Ver}"
					env.DTAFLOWREP="${params.Dataflow_replicas}"
					env.DTASETREP="${params.DataSet_replicas}"
					env.RCDSTRREP="${params.Recordstore_replicas}"
					env.ORCHREP="${params.Orchestrator_replicas}"	
					env.VLDREP="${params.Validation_replicas}"
					env.USRMGMREP="${params.User_management_replicas}"

 					echo "Update Database of ${params.Env}"

					script {
					withCredentials([
						usernamePassword(credentialsId: 'd2540d35-0b65-4c30-ab4d-57b5ab0c2397',
						usernameVariable: 'username',
						passwordVariable: 'password')
					]) {

					sh 'echo "Starting $TARGET_ENV building"' 
					sh '''
						mvn -f $WORKSPACE/helm/eaa-deploy/database -DPOSTGRES_SERVER=10.50.5.14:31293 -DPOSTGRES_PASS="$password" -DPOSTGRES_USER="$username" flyway:migrate
					'''

						}
					}






					// ####################################################################################################################################################
					// LETS TRY TO SET THE CHANGE ON THE PROPERTIES STATIC FILE
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "sed -i 's/ENV:.*}/ENV:${params.Env}}/g' $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "grep -rni 'ENV:' $WORKSPACE/helm/eaa-deploy/application-config/ | xargs sed -i 's/ENV:.*}/ENV:${params.Env}}/g'"
					//sh "grep -lE 'dev-' **/*| xargs sed -in 's/myPattern/NEWTEXT/g'"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "find $WORKSPACE/helm/eaa-deploy/application-config/ -type f | xargs sed -i 's/ENV:.*}/ENV:${params.Env}}/g'"


					sh "echo ######################################################################################################################"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~APPLICATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/dev.reportnet.europa.eu/${params.Env}.reportnet.europa.eu/g' $WORKSPACE/helm/eaa-deploy/application-config/files/application.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/application-config/files/application.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~API GATEWAY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-apigateway-metrics/ELASTIC_INDEX:${params.Env}-apigateway-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-api-gateway/preconfig/files/api-gateway.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-api-gateway/preconfig/files/api-gateway.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~COLLABORATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-collabration-metrics/ELASTIC_INDEX:${params.Env}-collabration-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~COMMUNICATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-communication-metrics/ELASTIC_INDEX:${params.Env}-communication-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DATAFLOW~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					//sh "sed -i 's/R3_CALLBACK_URL:http://rn3sandbox-api.altia.es/R3_CALLBACK_URL:http://rn3${params.Env}-api.altia.es/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					sh "sed -i 's/ELASTIC_INDEX:dev-dataflow-metrics/ELASTIC_INDEX:${params.Env}-dataflow-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DATASET~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-dataset-metrics/ELASTIC_INDEX:${params.Env}-dataset-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DOCUMENT~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-document-metrics/ELASTIC_INDEX:${params.Env}-document-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~RECORDSTORE~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-recordstore-metrics/ELASTIC_INDEX:${params.Env}-recordstore-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties"
					sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ROD~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-rod-metrics/ELASTIC_INDEX:${params.Env}-rod-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~UMS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-ums-metrics/ELASTIC_INDEX:${params.Env}-ums-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~VALIDATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-validation-metrics/ELASTIC_INDEX:${params.Env}-validation-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					sh "echo ######################################################################################################################"




				}
			}
		}
//############################## ****** HOTFIX  ******  ######################################	
 		stage('Deploy to HOTFIX') {
			when {				
				expression { params.Env == "hotfix" }
				}
            steps {
				echo "ENV: ${params.Env}"
				echo "BRANCH: ${params.Brn}"
				echo "VERSION: ${params.Ver}"
				script { 	
					echo "deploy to  ${params.Env}"
 					//Set Environment to dev
 					echo "Setting environment specific variables to ${params.Env}"
					sh 'echo "Setting Environment Variables for $Environment and Starting Deployment Pipeline"'    
					env.REPORTNET_BACKEND="https://hotfixes-api.reportnet.europa.eu"
					env.EULOGIN="https://hotfixes-auth.reportnet.europa.eu/auth/realms/Reportnet/protocol/openid-connect/auth?client_id=reportnet\\&redirect_uri=https%3A%2F%2Fhotfixes.reportnet.europa.eu%2Feulogin%2F&response_mode=fragment\\&response_type=code\\&scope=openid"
					env.WEB_SOCKET="wss://hotfixes.reportnet.europa.eu/communication/reportnet-websocket"
					env.SENTRY_ENV="hotfix"
					env.REDIRECT_URI="https://hotfixes.reportnet.europa.eu/eulogin/"
					env.R3_CALLBACK_URL="https://hotfixes-api.reportnet.europa.eu"
					env.FME_TOPIC="Reportnet3_Hotfixes_Topic"
					env.ENVIRONMENT="kubectl-config-hotfix"
					env.DEPLOYMENT_ENV="hotfix"
					env.DEPLOYMENT_BRN="${params.Brn}"
					env.DEPLOYMENT_VAR="${params.Ver}"
					env.DTAFLOWREP="${params.Dataflow_replicas}"
					env.DTASETREP="${params.DataSet_replicas}"
					env.RCDSTRREP="${params.Recordstore_replicas}"
					env.ORCHREP="${params.Orchestrator_replicas}"	
					env.VLDREP="${params.Validation_replicas}"
					env.USRMGMREP="${params.User_management_replicas}"

 					echo "Update Database of ${params.Env}"

					script {
					withCredentials([
						usernamePassword(credentialsId: 'd2540d35-0b65-4c30-ab4d-57b5ab0c2397',
						usernameVariable: 'username',
						passwordVariable: 'password')
					]) {

					sh 'echo "Starting $TARGET_ENV building"' 
					sh '''
						mvn -f $WORKSPACE/helm/eaa-deploy/database -DPOSTGRES_SERVER=10.50.5.14:31293 -DPOSTGRES_PASS="$password" -DPOSTGRES_USER="$username" flyway:migrate
					'''

						}
					}



					// ####################################################################################################################################################
					// LETS TRY TO SET THE CHANGE ON THE PROPERTIES STATIC FILE
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "sed -i 's/ENV:.*}/ENV:${params.Env}}/g' $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "grep -rni 'ENV:' $WORKSPACE/helm/eaa-deploy/application-config/ | xargs sed -i 's/ENV:.*}/ENV:${params.Env}}/g'"
					//sh "grep -lE 'dev-' **/*| xargs sed -in 's/myPattern/NEWTEXT/g'"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "find $WORKSPACE/helm/eaa-deploy/application-config/ -type f | xargs sed -i 's/ENV:.*}/ENV:${params.Env}}/g'"



					sh "echo ######################################################################################################################"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~APPLICATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/sandbox.reportnet.europa.eu/${params.Env}.reportnet.europa.eu/g' $WORKSPACE/helm/eaa-deploy/application-config/files/application.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/application-config/files/application.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~API GATEWAY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-apigateway-metrics/ELASTIC_INDEX:${params.Env}-apigateway-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-api-gateway/preconfig/files/api-gateway.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-api-gateway/preconfig/files/api-gateway.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~COLLABORATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-apigateway-metrics/ELASTIC_INDEX:${params.Env}-apigateway-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~COMMUNICATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-communication-metrics/ELASTIC_INDEX:${params.Env}-communication-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DATAFLOW~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					//sh "sed -i 's/R3_CALLBACK_URL:http://rn3sandbox-api.altia.es/R3_CALLBACK_URL:http://rn3${params.Env}-api.altia.es/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					sh "sed -i 's/ELASTIC_INDEX:dev-dataflow-metrics/ELASTIC_INDEX:${params.Env}-dataflow-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DATASET~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-dataset-metrics/ELASTIC_INDEX:${params.Env}-dataset-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DOCUMENT~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-document-metrics/ELASTIC_INDEX:${params.Env}-document-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~RECORDSTORE~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-recordstore-metrics/ELASTIC_INDEX:${params.Env}-recordstore-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ROD~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-rod-metrics/ELASTIC_INDEX:${params.Env}-rod-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties"
					//sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~UMS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-ums-metrics/ELASTIC_INDEX:${params.Env}-ums-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties"
					//sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~VALIDATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-validation-metrics/ELASTIC_INDEX:${params.Env}-validation-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties"
					//sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					sh "echo ######################################################################################################################"








				}
			}
		}
//############################## ****** PRODUCTION ******  ######################################
 		stage('Deploy to PRODUCTION') {
			when {				
				expression { params.Env == "PROD_RENAME-BACK-TO-prod-WHEN-IN-PRODUCTION" }
				}
            steps {
				echo "ENV: ${params.Env}"
				echo "BRANCH: ${params.Brn}"
				echo "VERSION: ${params.Ver}"
				script { 	
					echo "deploy to  ${params.Env}"
 					//Set Environment to dev
 					echo "Setting environment specific variables to ${params.Env}"
					sh 'echo "Setting Environment Variables for $Environment and Starting Deployment Pipeline "'    
					env.REPORTNET_BACKEND="https://api.reportnet.europa.eu"
					env.EULOGIN="https://auth.reportnet.europa.eu/auth/realms/Reportnet/protocol/openid-connect/auth?client_id=reportnet\\&redirect_uri=https%3A%2F%2Freportnet.europa.eu%2Feulogin%2F&response_mode=fragment\\&response_type=code\\&scope=openid"
					env.WEB_SOCKET="wss://reportnet.europa.eu/communication/reportnet-websocket"
					env.SENTRY_ENV="production"
					env.REDIRECT_URI="https://reportnet.europa.eu/eulogin/"
					env.R3_CALLBACK_URL="https://api.reportnet.europa.eu"
					env.FME_TOPIC="Reportnet3_Topic"
					env.ENVIRONMENT="kubectl-config-prod"
					env.DEPLOYMENT_ENV="prod"
					env.DEPLOYMENT_BRN="${params.Brn}"
					env.DEPLOYMENT_VAR="${params.Ver}"
					env.DTAFLOWREP="${params.Dataflow_replicas}"
					env.DTASETREP="${params.DataSet_replicas}"
					env.RCDSTRREP="${params.Recordstore_replicas}"
					env.ORCHREP="${params.Orchestrator_replicas}"	
					env.VLDREP="${params.Validation_replicas}"
					env.USRMGMREP="${params.User_management_replicas}"

 					echo "Update Database of ${params.Env}"

					script {
					withCredentials([
						usernamePassword(credentialsId: 'd2540d35-0b65-4c30-ab4d-57b5ab0c2397',
						usernameVariable: 'username',
						passwordVariable: 'password')
					]) {

					sh 'echo "Starting $TARGET_ENV building"' 
					sh '''
						mvn -f $WORKSPACE/helm/eaa-deploy/database -DPOSTGRES_SERVER=10.50.5.14:31293 -DPOSTGRES_PASS="$password" -DPOSTGRES_USER="$username" flyway:migrate
					'''

						}
					}



					// ####################################################################################################################################################
					// LETS TRY TO SET THE CHANGE ON THE PROPERTIES STATIC FILE
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "sed -i 's/ENV:.*}/ENV:${params.Env}}/g' $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "grep -rni 'ENV:' $WORKSPACE/helm/eaa-deploy/application-config/ | xargs sed -i 's/ENV:.*}/ENV:${params.Env}}/g'"
					//sh "grep -lE 'dev-' **/*| xargs sed -in 's/myPattern/NEWTEXT/g'"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "find $WORKSPACE/helm/eaa-deploy/application-config/ -type f | xargs sed -i 's/ENV:.*}/ENV:${params.Env}}/g'"



					sh "echo ######################################################################################################################"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~APPLICATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/sandbox.reportnet.europa.eu/${params.Env}.reportnet.europa.eu/g' $WORKSPACE/helm/eaa-deploy/application-config/files/application.properties"
					//sh "cat $WORKSPACE/helm/eaa-deploy/application-config/files/application.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~API GATEWAY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-apigateway-metrics/ELASTIC_INDEX:${params.Env}-apigateway-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-api-gateway/preconfig/files/api-gateway.properties"
					//sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-api-gateway/preconfig/files/api-gateway.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~COLLABORATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-apigateway-metrics/ELASTIC_INDEX:${params.Env}-apigateway-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties"
					//sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~COMMUNICATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-communication-metrics/ELASTIC_INDEX:${params.Env}-communication-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties"
					//sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DATAFLOW~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					//sh "sed -i 's/R3_CALLBACK_URL:http://rn3sandbox-api.altia.es/R3_CALLBACK_URL:http://rn3${params.Env}-api.altia.es/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					sh "sed -i 's/ELASTIC_INDEX:dev-dataflow-metrics/ELASTIC_INDEX:${params.Env}-dataflow-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					//sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DATASET~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-dataset-metrics/ELASTIC_INDEX:${params.Env}-dataset-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties"
					//sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DOCUMENT~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-document-metrics/ELASTIC_INDEX:${params.Env}-document-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties"
					//sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~RECORDSTORE~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-recordstore-metrics/ELASTIC_INDEX:${params.Env}-recordstore-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties"
					//sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ROD~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-rod-metrics/ELASTIC_INDEX:${params.Env}-rod-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties"
					//sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~UMS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-ums-metrics/ELASTIC_INDEX:${params.Env}-ums-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties"
					//sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~VALIDATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-validation-metrics/ELASTIC_INDEX:${params.Env}-validation-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties"
					//sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					sh "echo ######################################################################################################################"














				}
			}
		}

//############################## ****** PROD2 ******  ######################################
 		stage('Deploy to PROD2') {
			when {				
				expression { params.Env == "prod2" }
				}
            steps {
				echo "ENV: ${params.Env}"
				echo "BRANCH: ${params.Brn}"
				echo "VERSION: ${params.Ver}"
				script { 	
					echo "deploy to  ${params.Env}"
 					//Set Environment to dev
 					echo "Setting environment specific variables to ${params.Env}"
					sh 'echo "Setting Environment Variables for $Environment and Starting Deployment Pipeline "'    
					env.REPORTNET_BACKEND="https://transport-api.reportnet.europa.eu"
					env.EULOGIN="https://transport-auth.reportnet.europa.eu/auth/realms/Reportnet/protocol/openid-connect/auth?client_id=reportnet\\&redirect_uri=https%3A%2F%2Ftransport.reportnet.europa.eu%2Feulogin%2F&response_mode=fragment\\&response_type=code\\&scope=openid"
					env.WEB_SOCKET="wss://transport.reportnet.europa.eu/communication/reportnet-websocket"
					env.SENTRY_ENV="production2"
					env.REDIRECT_URI="https://transport.reportnet.europa.eu/eulogin/"
					env.R3_CALLBACK_URL="https://transport-api.reportnet.europa.eu"
					env.FME_TOPIC="Reportnet3_Topic"
					env.ENVIRONMENT="kubectl-config-prod2"
					env.DEPLOYMENT_ENV="prod2"
					env.DEPLOYMENT_BRN="${params.Brn}"
					env.DEPLOYMENT_VAR="${params.Ver}"
					env.DTAFLOWREP="${params.Dataflow_replicas}"
					env.DTASETREP="${params.DataSet_replicas}"
					env.RCDSTRREP="${params.Recordstore_replicas}"
					env.ORCHREP="${params.Orchestrator_replicas}"	
					env.VLDREP="${params.Validation_replicas}"
					env.USRMGMREP="${params.User_management_replicas}"

 					echo "Update Database of ${params.Env}"

					script {
					withCredentials([
						usernamePassword(credentialsId: 'd2540d35-0b65-4c30-ab4d-57b5ab0c2397',
						usernameVariable: 'username',
						passwordVariable: 'password')
					]) {

					sh 'echo "Starting $TARGET_ENV building"' 
					sh '''
						mvn -f $WORKSPACE/helm/eaa-deploy/database -DPOSTGRES_SERVER=10.50.5.14:31293 -DPOSTGRES_PASS="$password" -DPOSTGRES_USER="$username" flyway:migrate
					'''

						}
					}


					// ####################################################################################################################################################
					// LETS TRY TO SET THE CHANGE ON THE PROPERTIES STATIC FILE
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "sed -i 's/ENV:.*}/ENV:${params.Env}}/g' $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "grep -rni 'ENV:' $WORKSPACE/helm/eaa-deploy/application-config/ | xargs sed -i 's/ENV:.*}/ENV:${params.Env}}/g'"
					//sh "grep -lE 'dev-' **/*| xargs sed -in 's/myPattern/NEWTEXT/g'"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig/files/orchestrator-service.properties"
					//sh "find $WORKSPACE/helm/eaa-deploy/application-config/ -type f | xargs sed -i 's/ENV:.*}/ENV:${params.Env}}/g'"



					sh "echo ######################################################################################################################"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~APPLICATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/dev.reportnet.europa.eu/${params.Env}.reportnet.europa.eu/g' $WORKSPACE/helm/eaa-deploy/application-config/files/application.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/application-config/files/application.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~API GATEWAY~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-apigateway-metrics/ELASTIC_INDEX:${params.Env}-apigateway-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-api-gateway/preconfig/files/api-gateway.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-api-gateway/preconfig/files/api-gateway.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~COLLABORATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-apigateway-metrics/ELASTIC_INDEX:${params.Env}-apigateway-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig/files/collaboration-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~COMMUNICATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-communication-metrics/ELASTIC_INDEX:${params.Env}-communication-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig/files/communication-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DATAFLOW~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					//sh "sed -i 's/R3_CALLBACK_URL:http://rn3sandbox-api.altia.es/R3_CALLBACK_URL:http://rn3${params.Env}-api.altia.es/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					sh "sed -i 's/ELASTIC_INDEX:dev-dataflow-metrics/ELASTIC_INDEX:${params.Env}-dataflow-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig/files/dataflow-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DATASET~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-dataset-metrics/ELASTIC_INDEX:${params.Env}-dataset-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig/files/dataset-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~DOCUMENT~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-document-metrics/ELASTIC_INDEX:${params.Env}-document-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig/files/document-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~RECORDSTORE~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-recordstore-metrics/ELASTIC_INDEX:${params.Env}-recordstore-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig/files/recordstore-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ROD~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-rod-metrics/ELASTIC_INDEX:${params.Env}-rod-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig/files/rod-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~UMS~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-ums-metrics/ELASTIC_INDEX:${params.Env}-ums-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig/files/ums-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~VALIDATION~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
					sh "sed -i 's/ELASTIC_INDEX:dev-validation-metrics/ELASTIC_INDEX:${params.Env}-validation-metrics/g' $WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties"
					////sh "cat $WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig/files/validation-service.properties"
					//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

					sh "echo ######################################################################################################################"
				}
			}
		}










//######################################  SETUP COMMON STEPS  ######################################
 		stage('Common Steps') {
            steps {
				echo "ENV: ${params.Env}"
				echo "BRANCH: ${params.Brn}"
				echo "VERSION: ${params.Ver}"
	 			echo "Scaling down services of ${params.Env}"
	 			withCredentials([file(credentialsId: "${ENVIRONMENT}", variable: 'FILE')]) {
	 				sh '''
	 					kubectl -n $TARGET_ENV --kubeconfig=${FILE}  scale deploy $Reset_Services --replicas=0
	 				'''
	 			}

	 			// echo "Configure Common Application properties for ${params.Env}"
	 			// withCredentials([file(credentialsId: "${ENVIRONMENT}", variable: 'FILE')]) {
	 			// 	sh '''
	 			// 		helm install application-config $WORKSPACE/helm/eaa-deploy/application-config -n $TARGET_ENV --kubeconfig=${FILE}
	 			// 	'''
	 			// 	sleep(20)
	 			// 	sh '''
	 			// 		helm uninstall application-config  -n $TARGET_ENV --kubeconfig=${FILE}
	 			// 	'''
	 			// }







	 			echo "Deploy API Gateway of ${params.Env}"
				withCredentials([file(credentialsId: "${ENVIRONMENT}", variable: 'FILE')]) {
					sh '''
						helm install api-gateway-preconfig $WORKSPACE/helm/eaa-deploy/reportnet-api-gateway/preconfig -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sleep(20)
					sh '''
						helm uninstall api-gateway-preconfig  -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sh '''
						helm upgrade api-gateway $WORKSPACE/helm/eaa-deploy/reportnet-api-gateway/service -n $TARGET_ENV --kubeconfig=${FILE} -i  --wait --set version=$Ver,sentry.environment=$SENTRY_ENV
					'''
					}

	 			echo "Deploy Dataflow of ${params.Env}"
				withCredentials([file(credentialsId: "${ENVIRONMENT}", variable: 'FILE')]) {
					sh '''
						helm install dataflow-preconfig $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/preconfig -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sleep(20)
					sh '''
						helm uninstall dataflow-preconfig  -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sh '''
					helm upgrade dataflow $WORKSPACE/helm/eaa-deploy/reportnet-dataflow/service -n $TARGET_ENV  -i --kubeconfig=${FILE} --wait --set version=$Ver,fme.integration.callback.urlbase=$R3_CALLBACK_URL,fme.topic=$FME_TOPIC,sentry.environment=$SENTRY_ENV,replicas=$DTAFLOWREP
					'''
					}
				
	 			echo "Deploy Recordstore of ${params.Env}"
				withCredentials([file(credentialsId: "${ENVIRONMENT}", variable: 'FILE')]) {
					sh '''
						helm install recordstore-preconfig $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/preconfig -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sleep(20)
					sh '''
						helm uninstall recordstore-preconfig  -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					/*sh '''
						helm upgrade recordstore-persistence $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/pvc -n $TARGET_ENV --kubeconfig=${FILE}  -i --wait --set repo=k8s-swi001:5000,tagSufix=_sandbox
					'''*/
					sh '''
						helm upgrade recordstore $WORKSPACE/helm/eaa-deploy/reportnet-recordstore/service -n $TARGET_ENV --kubeconfig=${FILE} -i --wait --set version=$Ver,sentry.environment=$SENTRY_ENV,replicas=$RCDSTRREP
					'''
					sleep(20)
				}

				echo "Deploy Dataset of ${params.Env}"
				withCredentials([file(credentialsId: "${ENVIRONMENT}", variable: 'FILE')]) {
					sh '''
						helm install dataset-preconfig $WORKSPACE/helm/eaa-deploy/reportnet-dataset/preconfig -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sleep(20)
					sh '''
						helm uninstall dataset-preconfig  -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sh '''
						helm upgrade dataset $WORKSPACE/helm/eaa-deploy/reportnet-dataset/service -n $TARGET_ENV --kubeconfig=${FILE}  -i --wait --set version=$Ver,sentry.environment=$SENTRY_ENV,replicas=$DTASETREP
					'''
				}
				
	 			echo "Deploy Validation on ${params.Env}"
				withCredentials([file(credentialsId: "${ENVIRONMENT}", variable: 'FILE')]) {
					sh '''
						helm install validation-preconfig $WORKSPACE/helm/eaa-deploy/reportnet-validation/preconfig -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sleep(20)
					sh '''
						helm uninstall validation-preconfig  -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sh '''
						helm upgrade validation $WORKSPACE/helm/eaa-deploy/reportnet-validation/service -n $TARGET_ENV --kubeconfig=${FILE} -i --wait --set version=$Ver,sentry.environment=$SENTRY_ENV,replicas=$VLDREP
					'''
				}

				echo "Deploy orchestrator-service for ${params.Env}"
				withCredentials([file(credentialsId: "${ENVIRONMENT}", variable: 'FILE')]) {
				 	sh '''
						helm install orchestrator-preconfig $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/preconfig -n $TARGET_ENV --kubeconfig=${FILE}
				 	'''
				 	sleep(20)
				 	sh '''
				 		helm uninstall orchestrator-preconfig  -n $TARGET_ENV --kubeconfig=${FILE}
				 	'''
				 	sh '''
				 		helm upgrade orchestrator $WORKSPACE/helm/eaa-deploy/reportnet-orchestrator/service -n $TARGET_ENV --kubeconfig=${FILE} -i --wait --set version=$Ver,sentry.environment=$SENTRY_ENV,replicas=$ORCHREP
				 	'''
				}

	 			echo "Deploy User Management of ${params.Env}"
				withCredentials([file(credentialsId: "${ENVIRONMENT}", variable: 'FILE')]) {
					sh '''
						helm install ums-preconfig $WORKSPACE/helm/eaa-deploy/reportnet-ums/preconfig -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sleep(20)
					sh '''
						helm uninstall ums-preconfig  -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sh '''
						helm upgrade ums $WORKSPACE/helm/eaa-deploy/reportnet-ums/service -n $TARGET_ENV --kubeconfig=${FILE} -i --wait --set version=$Ver,sentry.environment=$SENTRY_ENV,replicas=$USRMGMREP
					'''
				}

	 			echo "Deploy Document Container on ${params.Env}"
				withCredentials([file(credentialsId: "${ENVIRONMENT}", variable: 'FILE')]) {


					//sh '''
					//	helm uninstall document-preconfig  -n $TARGET_ENV --kubeconfig=${FILE}
					//'''
					//sleep(20)
					sh '''
						helm install document-preconfig $WORKSPACE/helm/eaa-deploy/reportnet-document/preconfig -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sleep(20)
					sh '''
						helm uninstall document-preconfig  -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sh '''
						helm upgrade document $WORKSPACE/helm/eaa-deploy/reportnet-document/service -n $TARGET_ENV --kubeconfig=${FILE} -i --wait --set version=$Ver,sentry.environment=$SENTRY_ENV
					'''
				}

	 			echo "Deploy Communication for ${params.Env}"
				withCredentials([file(credentialsId: "${ENVIRONMENT}", variable: 'FILE')]) {

					//sh '''
					//	helm uninstall communication-preconfig  -n $TARGET_ENV --kubeconfig=${FILE}
					//'''
					//sleep(20)


					sh '''
						helm install communication-preconfig $WORKSPACE/helm/eaa-deploy/reportnet-communication/preconfig -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sleep(20)
					sh '''
						helm uninstall communication-preconfig  -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sh '''
						helm upgrade communication $WORKSPACE/helm/eaa-deploy/reportnet-communication/service -n $TARGET_ENV --kubeconfig=${FILE}  -i --wait --set version=$Ver,sentry.environment=$SENTRY_ENV
					'''
				}

	 			echo "Deploy Collaboration of ${params.Env}"
				withCredentials([file(credentialsId: "${ENVIRONMENT}", variable: 'FILE')]) {
					sh '''
						helm install collaboration-preconfig $WORKSPACE/helm/eaa-deploy/reportnet-collaboration/preconfig -n $TARGET_ENV  --kubeconfig=${FILE}
					'''
					sleep(20)
					sh '''
						helm uninstall collaboration-preconfig  -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sh '''
						helm upgrade collaboration $WORKSPACE/helm/eaa-deploy/reportnet-collaboration/service -n $TARGET_ENV --kubeconfig=${FILE} -i --wait --set version=$Ver,sentry.environment=$SENTRY_ENV
					'''
				}

				/*echo "Deploy Indexsearch for ${params.Env}"
				withCredentials([file(credentialsId: "${ENVIRONMENT}", variable: 'FILE')]) {
					sh '''
						helm install indexsearch-preconfig $WORKSPACE/helm/eaa-deploy/reportnet-indexsearch/preconfig -n $TARGET_ENV  --kubeconfig=${FILE}
					'''
					sleep(20)
					sh '''
						helm uninstall indexsearch-preconfig  -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sh '''
						helm upgrade indexsearch $$WORKSPACE/helm/eaa-deploy/reportnet-indexsearch/service -n $TARGET_ENV --kubeconfig=${FILE} -i --wait --set version=$Ver,sentry.environment=$SENTRY_ENV
					'''
				}*/


				
	 			echo "Deploy ReportNet Frontend for ${params.Env}"
				withCredentials([file(credentialsId: "${ENVIRONMENT}", variable: 'FILE')]) {
					sh '''
						helm upgrade frontend $WORKSPACE/helm/eaa-deploy/reportnet-frontend/service -n $TARGET_ENV --kubeconfig=${FILE} -i --wait --set version=$Ver,backend=$REPORTNET_BACKEND,keycloak=$KEYCLOAK,websocket=$WEB_SOCKET,eulogin=$EULOGIN,sentry.environment=$SENTRY_ENV
					'''
				}

	 			echo "Deploy Rod for ${params.Env}"
				withCredentials([file(credentialsId: "${ENVIRONMENT}", variable: 'FILE')]) {
					sh '''
						helm install rod-preconfig $WORKSPACE/helm/eaa-deploy/reportnet-rod/preconfig -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sleep(20)
					sh '''
						helm uninstall rod-preconfig  -n $TARGET_ENV --kubeconfig=${FILE}
					'''
					sh '''
						helm upgrade rod $WORKSPACE/helm/eaa-deploy/reportnet-rod/service -n $TARGET_ENV --kubeconfig=${FILE} -i --wait --set version=$Ver,sentry.environment=$SENTRY_ENV
					'''
				} 
	 		}
	 	}
	}
	/*post {
		always {
			cleanWs(cleanWhenAborted: true, cleanWhenFailure: true, cleanWhenNotBuilt: true, cleanWhenSuccess: true, cleanWhenUnstable: true, deleteDirs: true)
			script {
				def details = """<h1>${env.JOB_NAME} - Build #${env.BUILD_NUMBER} - ${currentBuild.currentResult}</h1>
					<p>Check console output at <a href="${env.BUILD_URL}/display/redirect">${env.JOB_BASE_NAME} - #${env.BUILD_NUMBER}</a></p>
					"""
				emailext(
				subject: '$DEFAULT_SUBJECT',
				body: details,
				attachLog: true,
				compressLog: true,
				recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'CulpritsRecipientProvider']]
				)
			}
		}
	}*/
}
